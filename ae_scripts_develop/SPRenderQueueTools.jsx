{// SPRenderQueueTools.jsx// // This script creates and shows a floating palette.// The floating palette contains buttons that launch a variety of// render queue scripts.function SPRenderQueueTools(thisObj){	function buildUI(thisObj) {		var panel = (thisObj instanceof Panel) ? thisObj : new Window("palette","SPRenderQueueTools",undefined, {resizeable:true});		res = "group{orientation:'row',alignment:['fill','fill'],\					groupOne: Group{orientation:'column',alignment:['fill','fill'],alignChildren:['fill','top'],\						button1: Button{},\						button2: Button{},\						button3: Button{},\						button4: Button{},\						buttonHelp: Button{text:'?'},\					},\				}";				panel.grp = panel.add(res);		return panel;	}	// Called when a button is pressed, to invoke its associated script	function onHelpButtonClick() {		alert("Click a button to run one of the following scripts:\n\n"  +			"\n" +			"Written by Daniel Harkness, Spinifex Group.\n" +			"https://github.com/spinifexgroup-studio/studio_pipeline/tree/master/ae_scripts_develop\n" +			"\n" +			"Real help file to come.\n" +			"", "SPRenderQueueTools"			  );	}	// Called when a button is pressed, to invoke its associated script	function onScriptButtonClick() {		var prevCurrentFolder = Folder.current;		Folder.current = this.currentDirectory;		// The scriptFile variable was set during addButton.		// Run the script by opening it, reading it, and evaluating its contents.		var scriptFile = new File(this.scriptFileName);		scriptFile.open();		eval(scriptFile.read());		scriptFile.close();		Folder.current = prevCurrentFolder;	}	// This function adds a new script-launching button to the palette	function setScriptButton(button, buttonLabel, buttonCurrentDirectory, buttonScriptName) {		// JavaScript has an unusual but useful bit of functionality.		// You can just assign a value to a new variable name and JS will		// store it for you. The lines below create new variables named		// scriptName and currentDirectory within button, and sets them		// to buttonScriptName and myCurrentDirectory.		// Later, in the onButtonClick() callback, the button will first		// re-establish the current directory, then load and		// run that file.		button.text = buttonLabel;		button.scriptFileName  = buttonScriptName;		button.currentDirectory = buttonCurrentDirectory;		button.onClick = onScriptButtonClick;	}	function isSecurityPrefSet() {		var securitySetting = app.preferences.getPrefAsLong("Main Pref Section", "Pref_SCRIPTING_FILE_NETWORK_SECURITY");		return (securitySetting == 1);	}	if (isSecurityPrefSet() == true) {		//		// Save the value of the current directory.		// -- In some cases, the current directory value is lost when button and other		// callbacks are invoked from a floating palette.		// -- Some of the buttons in the demo palette need to read other script		// files.  The most convenient notation for the filenames is to specify them		// relative to the current directory. And if the current directory is set wrong,		// then the nested scripts will fail to run correctly.		// -- to fix this, save the current directory now, and make sure to 		// re-establish it during onScriptButtonClick(). This will insure that the 		// files run during onScriptButtonCl		var myDirectory = Folder.current;		var scriptDirectory = new Folder(myDirectory.absoluteURI+"/(SPRenderQueueToolsFunctions)");		// Create and show a floating palette		//		//var myPanel = new Window("palette","SPRenderQueueTools");		var myPanel = buildUI(thisObj);		setScriptButton(myPanel.grp.groupOne.button1, "Create folder and output for selected comps",  scriptDirectory, "SPCreateFolderAndOutputForSelectedComps.jsx");		setScriptButton(myPanel.grp.groupOne.button2, "Create folder for sequences in render queue",  scriptDirectory, "SPCreateFolderForRenderQueueSequences.jsx");		setScriptButton(myPanel.grp.groupOne.button3, "Add proxy module for items in render queue", scriptDirectory, "SPAddProxyModuleToRenderQueueItems.jsx");		setScriptButton(myPanel.grp.groupOne.button4, "Change directory for items in render Queue", scriptDirectory, "SPChangeRenderLocations.jsx");		myPanel.grp.groupOne.buttonHelp.onClick = onHelpButtonClick;		//Seyp panel resizing		myPanel.layout.layout(true);		myPanel.grp.minimumSize = myPanel.grp.size;				// Make panel resize still		myPanel.layout.resize();		myPanel.onResizing = myPanel.onResize = function(){this.layout.resize()};		if (( myPanel != null) && (myPanel instanceof Window)){			myPanel.center();			myPanel.show();		}		} else {		alert ("This demo requires the scripting security preference to be set.\nGo to the \"General\" panel of your application preferences, and make sure that \"Allow Scripts to Write Files and Access Network\" is checked.", "Demo Palette");	}}SPRenderQueueTools(this);}